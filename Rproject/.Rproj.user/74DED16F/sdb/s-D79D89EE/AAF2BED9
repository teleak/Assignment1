{
    "contents" : "setwd('/Users/Teleak/Desktop/Kaggle/RawData') ### set working directory and read in training file\ndata<-read.csv(\"train.csv\", colClasses=c(\"factor\", \"factor\", \"character\", \"factor\", \"numeric\", \"factor\", \"factor\", \"character\", \"numeric\", \"character\", \"character\"), strip.white=TRUE, sep=\",\")\n### libraries\nrequire(plyr)\nrequire(Hmisc)\n\n#### Dimensions of dataset in rows and columns\n\ndim(data)\n\n#### Names and classes of data\n\nas.list(sapply(data, class))\n\n#### Number of NA's in each column\n\napply(data, 2, function(col) length(which(is.na(col)))) ### shows count of NA values by column\n\n#### Number of blank's in each column\n\napply(data, 2, function(col) length(which(col == \"\"))) ### shows count of blank values by column\n\n#### Summary of whole training set \n\nsummary(data)\n\n#### Breakdown on passenger types by class, sex, and survival\n\n(data.passengers<-ddply(data, .(pclass, sex), summarise, \n\t\t\t number = length(sex)\n \t\t\t))\n(data.survived.sum<-ddply(subset(data, data$survived == 1), .(pclass, sex), summarise, \n\t\t\t survived = length(sex)\n \t\t\t))\n(data.perished.sum<-ddply(subset(data, data$survived == 0), .(pclass, sex), summarise, \n\t\t\t perished = length(sex)\n \t\t\t))\n\nmerged.s <- merge(data.passengers, data.survived.sum, by=c('pclass', 'sex' ))\nmerged <- merge(merged.s, data.perished.sum, by=c('pclass', 'sex'))\nddply(merged, .(pclass, sex, number, survived, perished), summarise, #### combined summary here\n\t\t\t pclass = pclass,\n\t\t\t sex = sex, \n\t\t\t number = number, \n\t\t\t survived = survived, \n\t\t\t perc.survive = round(survived/number * 100, digits=2),\n\t \t\t perished = perished, \n\t \t\t perc.perish = round(perished/number * 100, digits=2)\n\t )\n#################################################################################\n#### Adding in age data have to deal with NAs\nnrow(data)\nhas.na<-data[!(complete.cases(data)),] ### subsets data to rows with NA values all of which are in age column (previously determined)\nnrow(has.na) ### 177 rows with NA values in age\n(na.passengers<-ddply(has.na, .(pclass, sex), summarise, \n\t\t\t total = length(sex)\n \t\t\t))\nna.surv <- ddply(subset(has.na, survived == 1), .(pclass, sex), summarise, \n\t\t\t survived = length(sex)\n \t\t\t)\nna.perish <- ddply(subset(has.na, survived == 0), .(pclass, sex), summarise, \n\t\t\t perished = length(sex)\n \t\t\t)\nmerged.na.s <- merge(na.passengers, na.surv, by=c('pclass', 'sex' ))\nmerge.na <- merge(merged.na.s, na.perish, by=c('pclass', 'sex'))\nddply(merge.na, .(pclass, sex, total, survived, perished), summarise, #### combined summary here\n\t\t\t pclass = pclass,\n\t\t\t sex = sex, \n\t\t\t total = total, \n\t\t\t survived = survived, \n\t\t\t perc.survive = round(survived/total * 100, digits=2),\n\t \t\t perished = perished, \n\t \t\t perc.perished = round(perished/total * 100, digits=2)\n\t )\n### Summary of data after removal of NA's \n\nno.na<-data[complete.cases(data),] ### removes NA values\nnrow(no.na) ###  714 rows in data frame excluding NA values\n(no.na.passengers<-ddply(no.na, .(pclass, sex), summarise, \n\t\t\t total = length(sex)\n \t\t\t))\nno.na.surv <- ddply(subset(no.na, survived == 1), .(pclass, sex), summarise, \n\t\t\t survived = length(sex)\n \t\t\t)\nno.na.perish <- ddply(subset(no.na, survived == 0), .(pclass, sex), summarise, \n\t\t\t perished = length(sex)\n \t\t\t)\nmerged.no.na.s <- merge(no.na.passengers, no.na.surv, by=c('pclass', 'sex' ))\nmerge.no.na <- merge(merged.no.na.s, no.na.perish, by=c('pclass', 'sex'))\nrows.no.na<-nrow(no.na)\ncat(\"Rows in dataset with NAs removed\", rows.no.na)\n(no.na.sum <- ddply(merge.no.na, .(pclass, sex, total, survived, perished), summarise, #### combined summary here of df with no na values in age column\n\t\t\t pclass = pclass,\n\t\t\t sex = sex, \n\t\t\t total = total, \n\t\t\t survived = survived, \n\t\t\t perc.survive = round(survived/total * 100, digits=2),\n\t \t\t perished = perished, \n\t \t\t perc.perished = round(perished/total * 100, digits=2)\n\t ))\n############################################################# survival by age\n\n### breakdown age into categories\nage.ranges<-cut(no.na$age, seq(0, 80, by=5))\ntable(age.ranges)\nsummary(no.na$age)\nhist(no.na$age, \n\tbreaks=seq(0, 80, by=5),\n\txlab = \"Age Group (years)\",\n\tylab = \"Number of Individuals\",\n\tmain = \"Age of Passenger and Crew on Titanic\"\n\t)\n\tmtext(text = \"Prior to Sinking\")\n\n\n\n#### working ages and factors\nage.ranges\nage.ranges.df<-as.data.frame(table(age.ranges))\nstr(age.ranges.df)\nage.ranges.df\n\ncol<-no.na$age\nmin<-0\nmax<-5\n\nranges<-function(df, min, max){\n\t\ttest<-no.na[col %in% c(min:max),]\n\t\tage.range<-rep(as.character(paste(min, \"-\", max, sep=\"\"), nrow(test)))\n\t\tresult<-cbind(age.range, test)\n\t\treturn(result)\n\t\t}\n\n\n",
    "created" : 1359955091334.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3630685573",
    "id" : "AAF2BED9",
    "lastKnownWriteTime" : 1359870452,
    "path" : "~/Desktop/Kaggle/Cache/Rcode/DescriptionAndMung/kaggle.titanic.desc.and.mung.v1.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}